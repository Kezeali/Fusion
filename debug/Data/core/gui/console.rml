<rml>
	<head>
		<title>Console</title>
		<link type="text/template" href="fusion_window.rml" />
		<style>
			body
			{
			width: 480px;
			height: 540px;

			margin: auto;
			}

			div#hide_button
			{
			display: inline;
			}

			div#content
			{
			text-align: left;
			}

			textarea#text_element
			{
			font-weight: bold;
			font-style: normal;
			font-size: 13;

			outline-font-effect: none;
			}

			input.text#command_element
			{
			width: 310px;
			}
			button
			{
			vertical-align: -4px;
			padding-top: 5px;
			height: 28px;
			font-size: 15;
			}
			button#enter_command
			{
			width: 48px;
			}
			button#clear_console
			{
			width: 27px;
			}
		</style>
		<!-- Note that the console window uses an externally compiled module, because the ElementConsole class needs
		to be registered before the console is loaded (could be solved by splitting console.as script into 2 files) -->
		<!-- <script src="console.as" /> -->
	</head>
  <body template="window" onload="%console:OnConsoleOpened(event);" onclose="%console:OnConsoleClosed();" onshow="%console:OnConsoleShow(event);" onhide="%console:OnConsoleHide();">
    <console id="console_element">
      <textarea id="text_element" name="console_data" cols="46" rows="26" maxlength="1200" readonly="true" onchange="%console:OnTextAreaChange(event);"/>
      <input id="command_element" type="text" name="command_input" enter_event="true" onchange="%console:OnConsoleEntryChanged(event);" onenter="%console:OnConsoleEntryEnter(event);" onkeyup="%console:OnConsoleEntryKeyUp(event);" onkeydown="%console:OnConsoleEntryKeyUp(event);"/>
      <button id="enter_command" onclick="%console:OnConsoleEnterClick(event);">Enter</button>
      <button id="clear_console" onclick="console.clear();">Clear</button>
    </console>
  </body>
</rml>
